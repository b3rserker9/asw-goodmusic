# application.yml
--- 
spring: 
  application: 
    name: connessioni
  cloud:
    consul:
      host: consul
      port: 8500
      discovery: 
        instanceId: ${spring.application.name}-${spring.cloud.client.hostname}-${random.value}
        healthCheckPath: /actuator/health
        healthCheckInterval: 10s
        # configurazione per effettuare esprimenti, NON USARE UN PRODUZIONE 
        # dopo quanto tempo consul deve smettere di restituire servizi che non rispondono all'health check? 
        healthCheckCriticalTimeout: 45s
        # consul deve restituire solo servizi che passano l'health check (default=false) 
        queryPassing: true 
    loadbalancer: 
      ribbon.enabled: false 
  datasource:
    url: jdbc:postgresql://connessioni_db:5432/connessioni
    username: postgres
    password: postgres

server: 
  port: 8080
#  port: 8080
  # per swagger, se dietro a un api gateway 
  forward-headers-strategy: framework

# fa il logging dei comandi sql eseguiti 
#spring.jpa.show-sql: true
# disable OSIV
spring.jpa.open-in-view: false
spring.jpa.hibernate.ddl-auto: create

# KAFKA
spring.kafka.bootstrap-servers : kafka:9092

# KAFKA PRODUCER
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer